name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write

jobs:
  build:
    name: Build Distribution
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check distribution
        run: twine check dist/*

      - name: Store distributions
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-testpypi:
    name: Publish to TestPyPI
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/justllms

    steps:
      - name: Download distributions
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}

      - name: Wait for TestPyPI propagation
        run: sleep 60

  verify-testpypi:
    name: Verify TestPyPI Installation
    needs: publish-testpypi
    runs-on: ubuntu-latest

    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Extract version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Install from TestPyPI
        run: |
          pip install --index-url https://test.pypi.org/simple/ \
            --extra-index-url https://pypi.org/simple/ \
            justllms==${{ steps.version.outputs.VERSION }}

      - name: Verify installation
        run: |
          python -c "import justllms; print(f'Installed version: {justllms.__version__}')"
          justllms --help || echo "CLI check completed"

      - name: Test basic functionality
        run: |
          python -c "from justllms import JustLLM; print('✅ Import successful')"

  publish-pypi:
    name: Publish to PyPI
    needs: verify-testpypi
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/justllms
    
    steps:
      - name: Download distributions
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

  github-release:
    name: Create GitHub Release
    needs: publish-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Extract version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Extract tag message
        id: tag_message
        run: |
          TAG_MESSAGE=$(git tag -l --format='%(contents)' ${GITHUB_REF#refs/tags/})
          echo "MESSAGE<<EOF" >> $GITHUB_OUTPUT
          echo "$TAG_MESSAGE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Download distributions
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.version.outputs.VERSION }}
          body: |
            ## JustLLMs v${{ steps.version.outputs.VERSION }}

            ${{ steps.tag_message.outputs.MESSAGE }}

            ### Installation
            ```bash
            pip install justllms==${{ steps.version.outputs.VERSION }}
            ```

            ---
            *View on PyPI: https://pypi.org/project/justllms/${{ steps.version.outputs.VERSION }}/*
          files: dist/*
          draft: false
          prerelease: false
          generate_release_notes: true

  verify-release:
    name: Verify Release
    needs: publish-pypi
    runs-on: ubuntu-latest
    
    steps:
      - name: Wait for PyPI availability
        run: sleep 30
      
      - name: Extract version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Test installation from PyPI
        run: |
          python -m pip install --upgrade pip
          pip install justllms==${{ steps.version.outputs.VERSION }}
          python -c "import justllms; assert justllms.__version__ == '${{ steps.version.outputs.VERSION }}'"
          echo "✅ Release verified successfully!"